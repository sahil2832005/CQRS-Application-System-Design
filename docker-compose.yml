version: '3.8'

services:
  # MongoDB service (write database)
  # Note: In a real production environment, you'd use MongoDB Atlas or a managed service
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
    networks:
      - cqrs-network

  # Redis service (read database)
  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - cqrs-network

  # User service
  user-service:
    build:
      context: ./services/user-service
      dockerfile: Dockerfile
    container_name: user-service
    restart: always
    ports:
      - "3001:3001"
    env_file:
      - ./services/user-service/.env
    environment:
      - MONGODB_URI=mongodb://root:example@mongodb:27017/user-service?authSource=admin
      - REDIS_URI=redis://redis:6379
    depends_on:
      - mongodb
      - redis
    networks:
      - cqrs-network

networks:
  cqrs-network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data:
